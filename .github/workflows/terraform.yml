name: "Infrastructure Deployment"
on : 
  push:
    branches: 
      - main
      - dev
  pull_request:
    branches: 
    - main
  workflow_dispatch:
    
defaults:
  run:
    shell: bash
env:
  AWS_ACCESS_KEY_ID : ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_KEY }}
  ROOT_PATH: '${{github.workspace}}'
jobs:
  terraform_plan:
    name: "Terraform_plan"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
           cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ env.ROOT_PATH }}

      - name: Terraform Plan
        id: plan
        #if: github.event_name == 'push'
        run: terraform plan -no-color
        working-directory: ${{ env.ROOT_PATH }}       
        
  terraform_apply:
    name: 'terraform_apply'
    needs: [terraform_plan]
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

 
    - name: terraform Init
      run: terraform init
      working-directory: ${{ env.ROOT_PATH }}
      


    - name: terraform Init
      run: echo 'var -> ${{inputs.tf_destroy}}'
      working-directory: ${{ env.ROOT_PATH }}

      #github.ref == 'refs/heads/main' && github.event_name == 'push'
    - name: terraform Apply
      run: terraform apply -auto-approve
      if: ${{inputs.tf_destroy}} == false
      working-directory: ${{ env.ROOT_PATH }}